---
import BaseLayout from "../layouts/BaseLayout.astro";
---

<BaseLayout title="Events - DoMore Mongolia">
  <main class="container mx-auto py-12 px-4">
    <section class="mx-18">
      <h1 class="text-5xl md:text-6xl font-extrabold text-transparent bg-clip-text bg-gradient-to-r from-blue-900 to-pink-400 drop-shadow-sm mb-4">
        Хөтөлбөрүүд
      </h1>
      <p class="text-balance md:text-2xl text-gray-700 font-medium leading-relaxed mb-8">
        Мэрэгжил сурталчлах хөтөлбөр, Сурагчдын хөгжлийн хөтөлбөр, Нийгмийн сайн сайхны төлөөх үйлс зэрэг олон төрлийн хөтөлбөрүүд.
      </p>
    </section>

    <!-- Opportunities Listing Section with Slider -->
    <section class="py-16 bg-gray-50 rounded-2xl shadow-inner mt-12 mx-4 md:mx-auto">
      <div class="container mx-auto text-center relative">
        <h2 class="text-3xl md:text-4xl font-bold mb-12 text-gray-900">
          Сүүлд нийтлэгдсэн хөтөлбөрүүд
        </h2>

        <div class="relative w-full max-w-7xl mx-auto overflow-hidden rounded-xl">
          <div id="opportunities-slider-track" class="flex transition-transform duration-500 ease-in-out">
            <!-- Opportunity Cards will be injected here by JavaScript -->
          </div>

          <!-- Slider Navigation Buttons -->
          <button
            id="opportunities-prev-slide"
            class="absolute top-1/2 left-4 -translate-y-1/2 bg-white/80 hover:bg-white text-gray-800 hover:text-purple-600 p-3 rounded-full shadow-lg transition-all duration-300 focus:outline-none focus:ring-2 focus:ring-purple-500"
            aria-label="Previous opportunity"
          >
            &#10094;
          </button>
          <button
            id="opportunities-next-slide"
            class="absolute top-1/2 right-4 -translate-y-1/2 bg-white/80 hover:bg-white text-gray-800 hover:text-purple-600 p-3 rounded-full shadow-lg transition-all duration-300 focus:outline-none focus:ring-2 focus:ring-purple-500"
            aria-label="Next opportunity"
          >
            &#10095;
          </button>
        </div>

        <!-- Pagination Dots -->
        <div id="opportunities-slider-dots" class="flex justify-center space-x-3 mt-8">
          <!-- Dots will be injected here by JavaScript -->
        </div>
      </div>
    </section>
  </main>
</BaseLayout>

<script>
  // Opportunity data
  const opportunities = [
    {
      title: "Эмчийн мэргэжил сурталчлах хөтөлбөр",
      organization: "Green Health Mongolia",
      description: "Анагаах ухааны мэргэжилтнүүдийн өдөр тутмын ажлыг танилцуулж, сурагчдад эмч мэргэжлийг сонгоход туслах хөтөлбөр. Дунд болон ахлах ангийн сурагчдад зориулсан хөтөлбөр.",
      location: "Green Health Hospital, Ulaanbaatar",
      image: "../image/hospital.jpg",
      duration: "Нэг өдрийн хөтөлбөр (8 сарын 20, 10:00-16:00)",
      category: "Эрүүл мэнд, Олон нийт",
      link: "/events/medical-career",
      color: "blue"
    },
    {
      title: "Шинэ төгсөгчдөд зориулсан оюутан хөгжлийн хөтөлбөр",
      organization: "Bright Futures Education",
      description: "Оюутан амьдралын ур чадвар, карьер төлөвлөлт, сэтгэл зүйн дэмжлэгийг санал болгодог хөтөлбөр.",
      location: "Community Learning Centers",
      image: "../image/student.jpg",
      duration: "7 хоног бүр (2-3 цаг)",
      category: "Боловсрол, Хувь хүний хөгжил",
      link: "/events/student-development",
      color: "green"
    },
    {
      title: "Уран зургийн хөтөлбөр",
      organization: "Golden color art gallery",
      description: "Уран зургийн авьяас чадвараа хөгжүүлэх, бүтээлээ танилцуулах боломжийг олгох хөтөлбөр.",
      location: "Golden Color Art Gallery",
      image: "../image/draw.jpg",
      duration: "Чөлөөтэй (7 хоног бүр)",
      category: "Урлаг, Соёл",
      link: "/events/art-program",
      color: "pink"
    },
    {
      title: "Тэжээвэр амьmg;mga харьцаж сурцгаая! хөтөлбөр",
      organization: "Mongolian Animal Welfare",
      description: "Шинэхэн эзэд, хүүхэд багачуудыг тэжээвэр амьтантай харьцах, асрах талаар сургах хөтөлбөр. Амьтдын халамж, хайр энхрийлэлд суралцах боломж.",
      location: "Ulaanbaatar Animal Shelter",
      image: "../image/animal.jpg",
      duration: "Сар бүр (4 цаг үргэлжлэнэ)",
      category: "Амьтны халамж, Боловсрол",
      link: "/events/animal-shelter",
      color: "blue"
    },
    {
      title: "Одон орон судлалын хөтөлбөр",
      organization: "Student Astronomy Club",
      description: "Одон орон судлалын үндсэн ойлголт, оддын судалгаа, тэдгээрийн нөлөөллийг танилцуулах хөтөлбөр. Сурагчдад шинжлэх ухааны сонирхлыг төрүүлэх зорилготой.",
      location: "National Planetarium",
      image: "../image/star.jpg",
      duration: "7 хоног бүр (4 цаг үргэлжлэнэ)",
      category: "Шинжлэх ухаан, Боловсрол",
      link: "/events/astronomy-program",
      color: "purple"
    },
    {
      title: "Cultural Heritage Preservation",
      organization: "Mongolian Heritage Keepers",
      description: "Assist in documenting, preserving, and promoting Mongolia's rich cultural heritage. A unique opportunity for history enthusiasts.",
      location: "Museums & Historical Sites",
      image: "../image/environmental_cleanup.jpg",
      duration: "Project-based",
      category: "Culture, History",
      link: "/opportunities/cultural-heritage",
      color: "teal"
    }
  ];

  const sliderTrack = document.getElementById('opportunities-slider-track');
  const prevButton = document.getElementById('opportunities-prev-slide');
  const nextButton = document.getElementById('opportunities-next-slide');
  const sliderDotsContainer = document.getElementById('opportunities-slider-dots');

  let currentIndex = 0;

  // Function to render opportunity cards
  function renderOpportunityCards() {
    sliderTrack.innerHTML = ''; // Clear existing
    opportunities.forEach((opportunity) => {
      const opportunityCard = document.createElement('div');
      // Set width to show 1 card on small screens, 2 on medium/large screens
      opportunityCard.className = `flex-none w-full md:w-1/2 p-4 box-border`;
      opportunityCard.innerHTML = `
        <div class="bg-white rounded-xl shadow-md p-6 flex flex-col h-full text-left border-t-4 border-${opportunity.color}-600">
          <h3 class="text-2xl font-bold text-gray-900 mb-2">${opportunity.title}</h3>
          <p class="text-${opportunity.color}-700 font-semibold mb-3">Байгууллага: ${opportunity.organization}</p>
          <p class="text-gray-700 mb-4 flex-grow">${opportunity.description}</p>
          <img src="${opportunity.image}" alt="${opportunity.title}" class="w-full h-48 object-cover rounded-md mb-4">
          <div class="text-gray-600 text-sm mb-4">
            <p><strong class="font-semibold">Байршил:</strong> ${opportunity.location}</p>
            <p><strong class="font-semibold">Үргэлжлэх хугацаа:</strong> ${opportunity.duration}</p>
            <p><strong class="font-semibold">Ангилал:</strong> ${opportunity.category}</p>
          </div>
          <a
            href="${opportunity.link}"
            class="inline-block bg-${opportunity.color}-600 hover:bg-${opportunity.color}-700 text-white font-bold py-2 px-6 rounded-full text-md transition duration-300 ease-in-out transform hover:scale-105 shadow-md self-center mt-auto"
          >
            Цааш үзэх
          </a>
        </div>
      `;
      sliderTrack.appendChild(opportunityCard);
    });
    updateSliderPosition();
    renderDots();
  }

  // Function to update slider position
  function updateSliderPosition() {
    // Calculate how many items to show based on screen size
    let itemsToShow = 2; // Default for mobile
    if (window.innerWidth >= 768) { // md breakpoint and above
      itemsToShow = 3;
    }

    const totalSlides = opportunities.length;
    const maxIndex = Math.max(0, totalSlides - itemsToShow);

    // Ensure currentIndex doesn't exceed maxIndex
    if (currentIndex > maxIndex) {
      currentIndex = maxIndex;
    }

    const firstCard = sliderTrack.children[0];
    const slideWidth = firstCard ? firstCard.offsetWidth : 0;

    const offset = -currentIndex * slideWidth;
    sliderTrack.style.transform = `translateX(${offset}px)`;

    updateDots();
  }

  // Function to navigate to the next slide
  function nextSlide() {
    let itemsToShow = 2;
    if (window.innerWidth >= 768) itemsToShow = 3;

    const maxIndex = Math.max(0, opportunities.length - itemsToShow);
    currentIndex = (currentIndex + 1 <= maxIndex) ? currentIndex + 1 : 0; // Loop back to start
    updateSliderPosition();
  }

  // Function to navigate to the previous slide
  function prevSlide() {
    let itemsToShow = 2;
    if (window.innerWidth >= 768) itemsToShow = 3;

    const maxIndex = Math.max(0, opportunities.length - itemsToShow);
    currentIndex = (currentIndex - 1 >= 0) ? currentIndex - 1 : maxIndex; // Loop to end
    updateSliderPosition();
  }

  // Function to render pagination dots
  function renderDots() {
    sliderDotsContainer.innerHTML = '';
    let itemsToShow = 2;
    if (window.innerWidth >= 768) itemsToShow = 3;

    const numDots = Math.ceil(opportunities.length / itemsToShow);

    for (let i = 0; i < numDots; i++) {
      const dot = document.createElement('button');
      dot.className = `w-3 h-3 rounded-full bg-gray-400 hover:bg-purple-500 transition-colors duration-300 focus:outline-none focus:ring-2 focus:ring-purple-500`;
      dot.dataset.index = (i * itemsToShow).toString(); // Each dot represents a "page" of items
      dot.addEventListener('click', () => {
        currentIndex = parseInt(dot.dataset.index);
        updateSliderPosition();
      });
      sliderDotsContainer.appendChild(dot);
    }
    updateDots();
  }

  // Function to update active dot
  function updateDots() {
    const dots = sliderDotsContainer.children;
    Array.from(dots).forEach((dot) => {
      const dotRepresentsIndex = parseInt(dot.dataset.index);
      if (dotRepresentsIndex === currentIndex) {
        dot.classList.add('bg-purple-600');
        dot.classList.remove('bg-gray-400');
      } else {
        dot.classList.remove('bg-purple-600');
        dot.classList.add('bg-gray-400');
      }
    });
  }

  // Event Listeners
  prevButton.addEventListener('click', prevSlide);
  nextButton.addEventListener('click', nextSlide);

  // Use a debounce for resize to prevent excessive re-renders
  let resizeTimeout;
  window.addEventListener('resize', () => {
    clearTimeout(resizeTimeout);
    resizeTimeout = setTimeout(() => {
      renderOpportunityCards(); // Re-render and update position on resize
    }, 250); // Debounce by 250ms
  });

  // Initial render on DOMContentLoaded
  document.addEventListener('DOMContentLoaded', renderOpportunityCards);
</script>
